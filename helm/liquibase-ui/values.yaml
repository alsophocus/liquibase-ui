# Default values for liquibase-ui
replicaCount: 3

image:
  repository: liquibase-ui
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  port: 80
  targetPort: 3001

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
  hosts:
    - host: liquibase.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: liquibase-ui-tls
      hosts:
        - liquibase.example.com

resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - liquibase-ui
        topologyKey: kubernetes.io/hostname

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Network Policy
networkPolicy:
  enabled: true

# Application configuration
config:
  nodeEnv: production
  port: 3001
  logLevel: info
  bitbucketUrl: "https://api.bitbucket.org/2.0"
  liquibasePath: "/usr/local/bin/liquibase"
  liquibaseChangelogPath: "db/changelog/db.changelog-master.xml"
  liquibaseContexts: "prod"

# Secrets (override in production)
secrets:
  jwtSecret: "your-super-secure-jwt-secret-change-in-production"
  jenkinsUrl: "https://jenkins.your-company.com"
  jenkinsUsername: "liquibase-user"
  jenkinsToken: "your_jenkins_api_token"
  bitbucketUsername: "your_bitbucket_username"
  bitbucketAppPassword: "your_bitbucket_app_password"
  bitbucketWorkspace: "your_workspace"

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres_password"
    username: "liquibase"
    password: "liquibase_password"
    database: "liquibase_ui"
  primary:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s

# Health checks
healthCheck:
  enabled: true
  livenessProbe:
    httpGet:
      path: /api/health
      port: 3001
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /api/health
      port: 3001
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
